console:
  quiet: False
  format: {}
  echo: True
  log_level: info

#local
task:
  folder: /home/ubuntu/gengyuan/experiments
  type: train
  device: 'cuda'
  reciprocal_training: False

random_seed:
  default: -1
  python: -1
  torch: -1
  numpy: -1
  numba: -1


# local
dataset:
  folder: /home/ubuntu/gengyuan/tkg-framework/data/icews14

  # indexes mapping [false, true]
  # TODO 可以保存到cache
  mapping: False
  filter: False
  temporal:
    resolution: "day"
    index: True
    float: False
  args: ~

  name: 'icews14'
  num_entities: -1
  num_relations: -1
  pickle: True

negative_sampling:
  type: 'time_agnostic'
  num_samples: 500
  filter: False
  as_matrix: True
  target: both
  args: ~


model:
  type: translation_simple_model

  p: 0.4


  embedding:
    global:
      dim: -1
      init: xavier_uniform
    entity:
      pos_aware: True
      keys:
        real:
          dim: 100
          init: xavier_uniform

    relation:
      keys:
        real:
          dim: 100
          init: xavier_uniform
    temporal:
      keys:
        real:
          dim: 100
          init: xavier_uniform
  fusion:
    type: addition_fusion
    target:
      - 'rel+temp'
    args: ~
  transformation:
    type: translation_tf
    gamma: 100
    p: 1
    range: 10
    args: ~
  scorer:
    inverse: True

  args: ~


train:
  # Split used for training (specified under 'data.files').
  split: train
  type: negative_sampling

  loss:
    type: cross_entropy_loss
    args: ~

  max_epochs: 500


  loader:
    num_workers: 0
    pin_memory: False
    drop_last: False
    timeout: 0

  valid:
    split: test # in [test or valid]
    every: 10
    batch_size: 100
    subbatch_size: -1
    filter: time-aware  # in [off, static, time-aware]
    ordering: optimistic    # in [optimistic, peesimistic]
    k: [1, 3, 10]

    early_stopping:
      early_stop: True
      patience: 30
      epochs: 100
      metric_thresh: 0.1

  batch_size: 512
  subbatch_size: 64
  subbatch_auto_tune: False
  optimizer:
    type: Adam
    args:
      lr: 0.001


  regularizer:
    lambda3:
      type: lambda3_regularize
      weight: 1e-2
      args: ~
    n3:
      type: n3_regularize
      weight: 1e-2
      args: ~
  inplace_regularizer: ~

  lr_scheduler: ""

  lr_scheduler_args:
    +++: +++

  trace_level: epoch           # batch, epoch

  checkpoint:
    folder: /home/ubuntu/gengyuan/ckpt/
    every: 10
    keep: 3

  auto_correct: False
  abort_on_nan: True
  visualize_graph: False

eval:
  filter: time-aware
  ordering: descending
  preference: optimistic
  k: [1,3,10]


